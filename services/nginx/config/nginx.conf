daemon                  off;
worker_processes        ${T_NGINX_NBWORKER};
pid                     /app/nginx.pid;

events
{
    worker_connections      ${T_NGINX_MAXCONNS};
}

http
{
    charset                 utf-8;
    include                 /etc/nginx/mime.types;

    log_format              log.access
                            '$time_local, client: "$remote_addr", user: "$remote_user", '
                            'status: "$status", request: "$request", referer: "$http_referer", '
                            'scheme: "$scheme", port: "$server_port", server: "$server_name", '
                            'host: "$host", agent: "$http_user_agent", '
                            'request_time: "$request_time", response_time: "$upstream_response_time", '
                            'request_length: "$request_length", response_length: "$bytes_sent"';

   access_log              syslog:server=logstash:${T_PORT_INTERN_LOGGING_1},tag=nginx_access log.access;
   error_log               syslog:server=logstash:${T_PORT_INTERN_LOGGING_2},tag=nginx_errors warn;

    sendfile                on;
    tcp_nopush              on;
    tcp_nodelay             on;
    keepalive_timeout       65;

    ## > STANDARD < ################

    server
    {
        listen                  ${T_PORT_EXTERN};
        return                  301 https://$host$request_uri;
    }

    ## > SECURED < #################

    server
    {
        listen                  ${T_PORT_EXTERN_SECURED} ssl;
        server_name             ${T_SERVER_NAME} 127.0.0.1 localhost;

        ssl_protocols           TLSv1.2 TLSv1.3;
        ssl_certificate         /app/ssl/transcendance.crt;
        ssl_certificate_key     /app/ssl/transcendance.key;
        ssl_ciphers             'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA';
        ssl_prefer_server_ciphers on;



        location /
        {
            proxy_pass              http://frontend:${T_PORT_INTERN_BACKEND};
            include                 cache.conf;
            include                 proxy.conf;
            gzip                    ${T_NGINX_COMPRESS};
        }

        location ~ /(?:api|media)/auth
        {
            proxy_pass              http://auth:${T_PORT_INTERN_BACKEND};
            include                 proxy.conf;
            gzip                    ${T_NGINX_COMPRESS};
        }

        location /wss/auth
        {
            proxy_pass              http://auth:${T_PORT_INTERN_BACKEND};
            include                 proxy.conf;
        }

        location ~ /(?:api|media)/game
        {
            proxy_pass              http://game:${T_PORT_INTERN_BACKEND};
            include                 proxy.conf;
            gzip                    ${T_NGINX_COMPRESS};
        }

        location /wss/game
        {
            proxy_pass              http://game:${T_PORT_INTERN_BACKEND};
            include                 proxy.conf;
        }

        location /${T_ENDPOINT_METRICS}/
        {
           proxy_pass              http://grafana:${T_PORT_INTERN_METRICS}/;
           include                 proxy.conf;
           gzip                    ${T_NGINX_COMPRESS};
        }

        location /${T_ENDPOINT_LOGGING}
        {
           proxy_pass              http://kibana:${T_PORT_INTERN_LOGGING};
           include                 proxy.conf;
           gzip                    ${T_NGINX_COMPRESS};
        }
    }

    ## > METRICS < #################

    server
    {
       listen                  ${T_PORT_INTERN_METRICS};
       server_name             ${T_SELF_NAME};

       location /${T_ENDPOINT_METRICS}
       {
           access_log              off;
           stub_status;
       }
    }
}
